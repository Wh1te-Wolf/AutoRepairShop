// <auto-generated />
using System;
using AutoRepairShop.Repository.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoRepairShop.Migrations
{
    [DbContext(typeof(AutoRepairShopContext))]
    partial class AutoRepairShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutoRepairShop.Entities.AcceptanceDocument", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarUUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("CustomerUUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("UUID");

                    b.HasIndex("CarUUID")
                        .IsUnique();

                    b.HasIndex("CustomerUUID")
                        .IsUnique();

                    b.ToTable("AcceptanceDocuments");
                });

            modelBuilder.Entity("AutoRepairShop.Entities.Car", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("CustomerUUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Removed")
                        .HasColumnType("bit");

                    b.HasKey("UUID");

                    b.HasIndex("CustomerUUID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("AutoRepairShop.Entities.Customer", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Removed")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("UUID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("AutoRepairShop.Entities.DocumentLine", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcceptanceDocumentUUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<Guid>("ServiceUUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UUID");

                    b.HasIndex("AcceptanceDocumentUUID");

                    b.HasIndex("ServiceUUID")
                        .IsUnique();

                    b.ToTable("DocumentLines");
                });

            modelBuilder.Entity("AutoRepairShop.Entities.Employee", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DismissalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Removed")
                        .HasColumnType("bit");

                    b.Property<Guid>("ShiftUUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("UUID");

                    b.HasIndex("ShiftUUID")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AutoRepairShop.Entities.Service", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Removed")
                        .HasColumnType("bit");

                    b.HasKey("UUID");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("AutoRepairShop.Entities.Shift", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Removed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("UUID");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("AutoRepairShop.Entities.User", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("UUID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AutoRepairShop.Entities.AcceptanceDocument", b =>
                {
                    b.HasOne("AutoRepairShop.Entities.Car", "Car")
                        .WithOne()
                        .HasForeignKey("AutoRepairShop.Entities.AcceptanceDocument", "CarUUID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutoRepairShop.Entities.Customer", "Customer")
                        .WithOne()
                        .HasForeignKey("AutoRepairShop.Entities.AcceptanceDocument", "CustomerUUID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AutoRepairShop.Entities.Car", b =>
                {
                    b.HasOne("AutoRepairShop.Entities.Customer", "Customer")
                        .WithMany("Cars")
                        .HasForeignKey("CustomerUUID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AutoRepairShop.Entities.DocumentLine", b =>
                {
                    b.HasOne("AutoRepairShop.Entities.AcceptanceDocument", "AcceptanceDocument")
                        .WithMany("DocumentLines")
                        .HasForeignKey("AcceptanceDocumentUUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoRepairShop.Entities.Service", "Service")
                        .WithOne()
                        .HasForeignKey("AutoRepairShop.Entities.DocumentLine", "ServiceUUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcceptanceDocument");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("AutoRepairShop.Entities.Employee", b =>
                {
                    b.HasOne("AutoRepairShop.Entities.Shift", "Shift")
                        .WithOne()
                        .HasForeignKey("AutoRepairShop.Entities.Employee", "ShiftUUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("AutoRepairShop.Entities.AcceptanceDocument", b =>
                {
                    b.Navigation("DocumentLines");
                });

            modelBuilder.Entity("AutoRepairShop.Entities.Customer", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
